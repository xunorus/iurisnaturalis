{"mappings":"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","sources":["src/js/attestations.js"],"sourcesContent":["\nfunction addAttestIAMcode(){\n  console.log('adding add attesttation for IAM code ')\n\n  let attestUI = `\n\n<section id=\"makeAttests\" class=\"container\">\n\n<p data-translate=\"addAttests\" class=\"heading\">1- MAKE ATESTATION</p>\n<p></p>\n\n  <button type=\"button\" class=\"btn btn-warning\" onclick=\"event.stopPropagation();attest();\">ATTEST</button>\n  \n</section>\n\n\n`\n// attesttionUI\ndocument.getElementById('attesttionUI').innerHTML = attestUI\n// document.getElementById('soveraindocspremint').innerHTML = attestUI\ndocument.getElementById('attesttionUI').style.display='flex'\ndocument.getElementById('soveraindocs').style.display='none'\ndocument.getElementById('splash').style.display='none'\ndocument.getElementById('soveraindocspremint').style.display='none'\n\n}\n\n\n\n\n// const provider = new ethers.providers.JsonRpcProvider(\"https://goerli.optimism.io\");\n// console.log('provider:',provider);\n// const EASContractAddress = \"0x4200000000000000000000000000000000000021\"; // Optimism Goerli v1.0.1\n\n\n\nfunction stringToBytes32(inputString) {\n  // Ensure the input string is not longer than 32 bytes\n  if (inputString.length > 32) {\n      throw new Error(\"Input string is too long for bytes32\");\n  }\n\n  // Create a new Uint8Array with a length of 32 bytes (bytes32)\n  const bytes32 = new Uint8Array(32);\n\n  // Convert the input string to UTF-8 bytes\n  const utf8Bytes = new TextEncoder().encode(inputString);\n\n  // Copy the UTF-8 bytes to the bytes32 array\n  bytes32.set(utf8Bytes);\n\n  return bytes32;\n}  \n\n\n\n \n\n// ATTEST IAM code\nasync function attest(){\n\n  // ---------------------------------------------\n        //  CHECK WALLET CHOICE (CONNECTED-DISCONNECTED)\n        let walletChoice = localStorage.getItem('wallet');\n        if (walletChoice) {\n            console.log('THERE IS WALLET  CHOICE SAVED IN LOCALSTORAGE')\n            if(walletChoice == \"METAMASK\"){\n                console.log('USE METAMASK ')              \n            }\n                  if(walletChoice ==\"LOCALWALLET\"){\n                      console.log('USE LOCALWALLET:')\n  \n                //   -------------------------------------------------------------\n                        //STEP 0 -  DECRYPT WALLET TO MAKE THE TRANSACTION\n                        await Swal.fire({ title: 'Unlock your LOCALWALLET', input: 'password', inputAttributes: { autocapitalize: 'off' }, showCancelButton: true, confirmButtonText: 'Enter', showLoaderOnConfirm: true, backdrop: true, preConfirm: (login) => { }, allowOutsideClick: () => { const popup = Swal.getPopup(); popup.classList.remove('swal2-show'); setTimeout(() => { popup.classList.add('animate__animated', 'animate__headShake') }); setTimeout(() => { popup.classList.remove('animate__animated', 'animate__headShake') }, 500); return false }, })\n                        .then((result) => {\n                        if (result.isConfirmed) {\n                        console.log('password entered!')\n                          if(result.value ==''){ console.log('IS EMPTY'); Toast.fire({ icon: 'error', title: 'Password cannot be empty' }); return; }\n  \n                          // cancelMinting.disabled = true;//DISABLE CANCEL\n                          openModalId('#attestingModal')\n                          // step0.innerHTML= `<h5>1- Decrypting wallet  <span id=\"step0Spinner\" style=\"\" class=\"spinner-grow spinner-grow-sm\"></span> <svg id=\"step0Check\"  style=\"visibility:hidden\" width=\"18\" height=\"16\" viewBox=\"0 0 512 512\"  xmlns:svg=\"http://www.w3.org/2000/svg\"> <path d=\"M243.8 339.8C232.9 350.7 215.1 350.7 204.2 339.8L140.2 275.8C129.3 264.9 129.3 247.1 140.2 236.2C151.1 225.3 168.9 225.3 179.8 236.2L224 280.4L332.2 172.2C343.1 161.3 360.9 161.3 371.8 172.2C382.7 183.1 382.7 200.9 371.8 211.8L243.8 339.8zM512 256C512 397.4 397.4 512 256 512C114.6 512 0 397.4 0 256C0 114.6 114.6 0 256 0C397.4 0 512 114.6 512 256zM256 48C141.1 48 48 141.1 48 256C48 370.9 141.1 464 256 464C370.9 464 464 370.9 464 256C464 141.1 370.9 48 256 48z\" style=\"fill:#00ff00\"/></svg> </h5>\n                          document.getElementById('stepAttest0').innerHTML= `<h5>1- Decrypting wallet \n                           <span id=\"stepAttest0Spinner\" style=\"\" class=\"spinner-grow spinner-grow-sm\"></span>\n                           <svg id=\"stepAttest0Check\"  style=\"visibility:hidden\" width=\"18\" height=\"16\" viewBox=\"0 0 512 512\"  xmlns:svg=\"http://www.w3.org/2000/svg\"> <path d=\"M243.8 339.8C232.9 350.7 215.1 350.7 204.2 339.8L140.2 275.8C129.3 264.9 129.3 247.1 140.2 236.2C151.1 225.3 168.9 225.3 179.8 236.2L224 280.4L332.2 172.2C343.1 161.3 360.9 161.3 371.8 172.2C382.7 183.1 382.7 200.9 371.8 211.8L243.8 339.8zM512 256C512 397.4 397.4 512 256 512C114.6 512 0 397.4 0 256C0 114.6 114.6 0 256 0C397.4 0 512 114.6 512 256zM256 48C141.1 48 48 141.1 48 256C48 370.9 141.1 464 256 464C370.9 464 464 370.9 464 256C464 141.1 370.9 48 256 48z\" style=\"fill:#00ff00\"/>\n                           </svg> </h5>\n                          <div id=\"stepAttest0Progress\"></div>`;\n                          let encryptedjson = localStorage.getItem('jsonWallet')\n                          let ew = JSON.parse( encryptedjson)\n                          console.log('pub key of wallet in localstorage:', ew.address)\n                  \n                          let wallet;\n                          try { \n                            wallet =  ethers.Wallet.fromEncryptedJson(encryptedjson, result.value, decryptAttestProgress)\n                            .then(async (localWallet) => {\n  \n                              // w=localWallet;\n                              console.log('WALLET DECRYPTED: ', localWallet.address)\n                              // DO SOMETHING HERE... -------------------------------------------------------------\n  \n                                    //   GET PROVIDER\n                                    let provider = new ethers.providers.JsonRpcProvider(`${optionsList[0].API}`);\n                                    console.log('JsonRpcProvider', optionsList[0].API);\n                                    \n                                    //   GET NETWORK\n                                  try{ network = await provider.getNetwork(); }\n                                  catch (error) { console.log(error.message); \n                                    fixedToast.fire( 'Error',error.message, \"error\"); \n                                    mode.innerHTML = 'OFFCHAIN';\n                                    mode.style.border = '1px solid red';\n                                    mode.style.color = 'red';\n                                  }\n\n                                  // GET SIGNER\n                                  const signer = localWallet.connect(provider)\n                                  const address = await signer.getAddress();\n                                   balance = await signer.getBalance();\n                                console.log('address and balance:', address,  parseInt( balance, 16))\n\n                                  // ATTEST\n                              console.log('ATTEST IAM code is controlled by IAM address');\n\n                              const EASContractAddress = \"0xC2679fBD37d54388Ce493F1DB75320D236e1815e\"; // Sepolia Testnet v0.26\n                              \n                                    let eas= new EAS(EASContractAddress);\n                                    console.log('provider: ', provider);\n                                    eas.connect(provider);\n                              \n                              console.log('offchainIAM')\n                              let inputString = localStorage.getItem('iamcode')\n                              const bytes32Value = stringToBytes32(inputString);\n                              console.log(bytes32Value);\n                              const offchain = await eas.getOffchain();\n                              \n                              // get timestamp\n                              const timestamp = Math.floor(new Date().getTime() / 1000);\n                              console.log(timestamp);\n\n                              const schemaEncoder = new SchemaEncoder(\"bytes32 IAMcode,address IAMaddress\");\n                              const encodedData = schemaEncoder.encodeData([\n                                { name: \"IAMcode\", value: bytes32Value, type: \"bytes32\" },\n                                { name: \"IAMaddress\", value: address, type: \"address\" },\n                              ]);\n                              \n                              \n\n                              try { \n                                offchainAttestation = await offchain.signOffchainAttestation({\n                                  recipient: signer.address,\n                                  expirationTime: 0,\n                                  time: timestamp,\n                                  revocable: true,\n                                  version: 1,\n                                  nonce: 0,\n                                  schema: \"0x555f3e615bdcbc8af0b83820b451e4bde6ca57cb74b6307ae16ec83d29486b1e\",\n                                  refUID: '0x0000000000000000000000000000000000000000000000000000000000000000',\n                                  data: encodedData,\n                                  }, signer);\n                              }\n                              catch (error) { console.log('error:', error); return; }\n                              \n                              console.log('offchainAttestation:' ,offchainAttestation)\n                              localStorage.setItem('iamcodeUID', offchainAttestation.uid)\n                              // localStorage.setItem('iamcode', iamCode);\n\n\n                              let offchainobject  = {sig: offchainAttestation, signer: signer.address}\n                              const url = createOffchainURL(offchainobject);\n                              const fullOffchainAttestLink = 'https://sepolia.easscan.org'+url;\n                              console.log('FULL URL:',fullOffchainAttestLink )\n                              // localStorage.setItem('iamcodeUID',offchainAttestation)\n                              \n                              // END... -------------------------------------------------------------\n                              // SUCCESS\n                              // 0. close modal id\n                              closeModalId('#attestingModal')\n\n                              // 1. save attestation link in localstorage\n                              localStorage.setItem('iamAttestation', fullOffchainAttestLink)\n                              // 2. modify header\n                            setAttestedIamcode(fullOffchainAttestLink)\n  \n                               // SUCCESS\n                              document.getElementById('iam').style.display = 'none';\n                              // Toastcenter.fire( 'Success','IAM code created and Attested!', \"success\");\n                              Toast.fire( 'Success','IAM code created and Attested!', \"success\");\n\n                              addEditDocumentsUI()\n                              loadDocs()\n                              reloadTranslations()\n                          \n                              // --- END --------------------------------------------------------------------------\n                            })\n                          } catch (error) {\n                            console.log('ERROR AT LOCALWALLET DECRYPTING:', error);\n                             Toast.fire({ icon: 'error', title: 'Password incorrect' })\n                            return;\n                            }\n                          }\n                          else if (result.isDenied) {\n                            console.log('NOT DECRYPTED')\n                            return\n                          }\n                        })\n                      }\n                    }\n  }\n\n\n\n  async function revokeOffchain(uid){\n    console.log('REVOKING: ', uid)\n\n\n\n // ---------------------------------------------\n        //  CHECK WALLET CHOICE (CONNECTED-DISCONNECTED)\n        let walletChoice = localStorage.getItem('wallet');\n        if (walletChoice) {\n            console.log('THERE IS WALLET  CHOICE SAVED IN LOCALSTORAGE')\n            if(walletChoice == \"METAMASK\"){\n                console.log('USE METAMASK ')              \n            }\n                  if(walletChoice ==\"LOCALWALLET\"){\n                      console.log('USE LOCALWALLET:')\n  \n                //   -------------------------------------------------------------\n                        //STEP 0 -  DECRYPT WALLET TO MAKE THE TRANSACTION\n                        await Swal.fire({ title: 'Unlock your LOCALWALLET', input: 'password', inputAttributes: { autocapitalize: 'off' }, showCancelButton: true, confirmButtonText: 'Enter', showLoaderOnConfirm: true, backdrop: true, preConfirm: (login) => { }, allowOutsideClick: () => { const popup = Swal.getPopup(); popup.classList.remove('swal2-show'); setTimeout(() => { popup.classList.add('animate__animated', 'animate__headShake') }); setTimeout(() => { popup.classList.remove('animate__animated', 'animate__headShake') }, 500); return false }, })\n                        .then((result) => {\n                        if (result.isConfirmed) {\n                        console.log('password entered!')\n                          if(result.value ==''){ console.log('IS EMPTY'); Toast.fire({ icon: 'error', title: 'Password cannot be empty' }); return; }\n  \n                          openModalId('#attestingModal')\n                         \n                          // START STEP 0\n                          document.getElementById('stepAttest0').innerHTML= `<h5>1- Decrypting wallet \n                           <span id=\"stepAttest0Spinner\" style=\"\" class=\"spinner-grow spinner-grow-sm\"></span>\n                           <svg id=\"stepAttest0Check\"  style=\"visibility:hidden\" width=\"18\" height=\"16\" viewBox=\"0 0 512 512\"  xmlns:svg=\"http://www.w3.org/2000/svg\"> <path d=\"M243.8 339.8C232.9 350.7 215.1 350.7 204.2 339.8L140.2 275.8C129.3 264.9 129.3 247.1 140.2 236.2C151.1 225.3 168.9 225.3 179.8 236.2L224 280.4L332.2 172.2C343.1 161.3 360.9 161.3 371.8 172.2C382.7 183.1 382.7 200.9 371.8 211.8L243.8 339.8zM512 256C512 397.4 397.4 512 256 512C114.6 512 0 397.4 0 256C0 114.6 114.6 0 256 0C397.4 0 512 114.6 512 256zM256 48C141.1 48 48 141.1 48 256C48 370.9 141.1 464 256 464C370.9 464 464 370.9 464 256C464 141.1 370.9 48 256 48z\" style=\"fill:#00ff00\"/>\n                           </svg> </h5>\n                          <div id=\"stepAttest0Progress\"></div>`;\n                          \n                          let encryptedjson = localStorage.getItem('jsonWallet')\n                          let ew = JSON.parse( encryptedjson)\n                          console.log('pub key of wallet in localstorage:', ew.address)\n                  \n\n                          ethers.Wallet.fromEncryptedJson(encryptedjson, result.value, decryptAttestProgress)\n  .then(async (localWallet) => {\n    try {\n      // DO SOMETHING HERE with 'localWallet'... ----------------------------------------------\n  // DO SOMETHING HERE... -------------------------------------------------------------\n  console.log('WALLET DECRYPTED: ', localWallet.address)\n                          \n  //   GET PROVIDER\n  let provider = new ethers.providers.JsonRpcProvider(`${optionsList[0].API}`);\n  console.log('JsonRpcProvider', optionsList[0].API);\n\n  //   GET NETWORK\n  try{ network = await provider.getNetwork(); }\n  catch (error) { console.log(error.message); \n  fixedToast.fire( 'Error',error.message, \"error\"); \n  mode.innerHTML = 'OFFCHAIN';\n  mode.style.border = '1px solid red';\n  mode.style.color = 'red';\n  }\n\n  // GET SIGNER\n  const signer = localWallet.connect(provider)\n  const address = await signer.getAddress();\n  balance = await signer.getBalance();\n  console.log('address and balance:', address,  parseInt( balance, 16))\n\n  if (parseInt(balance, 16) === 0) {\n    console.log(\"balance is zero\");\n    document.getElementById('stepAttest1').innerHTML= `<h5>You dont have enough balance to pay for the transaction <svg id=\"stepAttest1Error\"  style=\"visibility:hidden\" xmlns=\"http://www.w3.org/2000/svg\" height=\"1em\" viewBox=\"0 0 576 512\"><style>svg{fill:#fa0000}</style><path d=\"M569.517 440.013C587.975 472.007 564.806 512 527.94 512H48.054c-36.937 0-59.999-40.055-41.577-71.987L246.423 23.985c18.467-32.009 64.72-31.951 83.154 0l239.94 416.028zM288 354c-25.405 0-46 20.595-46 46s20.595 46 46 46 46-20.595 46-46-20.595-46-46-46zm-43.673-165.346l7.418 136c.347 6.364 5.609 11.346 11.982 11.346h48.546c6.373 0 11.635-4.982 11.982-11.346l7.418-136c.375-6.874-5.098-12.654-11.982-12.654h-63.383c-6.884 0-12.356 5.78-11.981 12.654z\"/></svg> </h5>`;\n    document.getElementById('stepAttest1Error').style.visibility= 'visible'\n    document.getElementById(\"cancelAttesting\").disabled = false;\n\n    return\n} else {\n    console.log(\"balance is not zero\");\n}\n\n  // START STEP 2\n  // document.getElementById('stepAttest1').innerHTML= `<h5>2- Revoking attestation <span id=\"stepAttest1Spinner\" style=\"\" class=\"spinner-grow spinner-grow-sm\"></span> <svg id=\"stepAttest1Check\"  style=\"visibility:hidden\" width=\"18\" height=\"16\" viewBox=\"0 0 512 512\"  xmlns:svg=\"http://www.w3.org/2000/svg\"> <path d=\"M243.8 339.8C232.9 350.7 215.1 350.7 204.2 339.8L140.2 275.8C129.3 264.9 129.3 247.1 140.2 236.2C151.1 225.3 168.9 225.3 179.8 236.2L224 280.4L332.2 172.2C343.1 161.3 360.9 161.3 371.8 172.2C382.7 183.1 382.7 200.9 371.8 211.8L243.8 339.8zM512 256C512 397.4 397.4 512 256 512C114.6 512 0 397.4 0 256C0 114.6 114.6 0 256 0C397.4 0 512 114.6 512 256zM256 48C141.1 48 48 141.1 48 256C48 370.9 141.1 464 256 464C370.9 464 464 370.9 464 256C464 141.1 370.9 48 256 48z\" style=\"fill:#00ff00\"/> </svg> </h5>`;\n\n  document.getElementById('stepAttest1').innerHTML= `<h5>2- Revoking attestation \n  <span id=\"stepAttest1Spinner\" style=\"\" class=\"spinner-grow spinner-grow-sm\"></span>\n  <svg id=\"stepAttest1Check\"  style=\"visibility:hidden\" width=\"18\" height=\"16\" viewBox=\"0 0 512 512\"  xmlns:svg=\"http://www.w3.org/2000/svg\"> <path d=\"M243.8 339.8C232.9 350.7 215.1 350.7 204.2 339.8L140.2 275.8C129.3 264.9 129.3 247.1 140.2 236.2C151.1 225.3 168.9 225.3 179.8 236.2L224 280.4L332.2 172.2C343.1 161.3 360.9 161.3 371.8 172.2C382.7 183.1 382.7 200.9 371.8 211.8L243.8 339.8zM512 256C512 397.4 397.4 512 256 512C114.6 512 0 397.4 0 256C0 114.6 114.6 0 256 0C397.4 0 512 114.6 512 256zM256 48C141.1 48 48 141.1 48 256C48 370.9 141.1 464 256 464C370.9 464 464 370.9 464 256C464 141.1 370.9 48 256 48z\" style=\"fill:#00ff00\"/>\n  </svg> \n  <svg id=\"stepAttest1Error\"  style=\"visibility:hidden\" xmlns=\"http://www.w3.org/2000/svg\" height=\"1em\" viewBox=\"0 0 576 512\"><style>svg{fill:#fa0000}</style><path d=\"M569.517 440.013C587.975 472.007 564.806 512 527.94 512H48.054c-36.937 0-59.999-40.055-41.577-71.987L246.423 23.985c18.467-32.009 64.72-31.951 83.154 0l239.94 416.028zM288 354c-25.405 0-46 20.595-46 46s20.595 46 46 46 46-20.595 46-46-20.595-46-46-46zm-43.673-165.346l7.418 136c.347 6.364 5.609 11.346 11.982 11.346h48.546c6.373 0 11.635-4.982 11.982-11.346l7.418-136c.375-6.874-5.098-12.654-11.982-12.654h-63.383c-6.884 0-12.356 5.78-11.981 12.654z\"/></svg>\n  \n  </h5>`;\n\n\n  document.getElementById(\"cancelAttesting\").disabled = true;\n\n\n  // ATTEST\n  console.log('REVOKE ATTEST IAM code is controlled by IAM address');\n  const EASContractAddress = \"0xC2679fBD37d54388Ce493F1DB75320D236e1815e\"; // Sepolia Testnet v0.26\n  let eas= new EAS(EASContractAddress);\n  console.log('provider: ', provider);\n  eas.connect(provider);\n  eas.connect(signer);\n  console.log('formatBytes32String:', uid);\n  const transaction = await eas.revokeOffchain(uid);\n  await transaction.wait();\n  console.log('revokeOffchain TX:', transaction)\n\n\n  // SUCESS, REVOKED\n  document.getElementById('iam').setAttribute('style', 'display:flex !important');\n  document.getElementById('splash').setAttribute('style', 'display:none !important');\n  document.getElementById('attesttionUI').setAttribute('style', 'display:none !important');\n  document.getElementById('soveraindocs').setAttribute('style', 'display:none !important');\n  document.getElementById('soveraindocspremint').setAttribute('style', 'display:none !important');\n  headMessages.innerHTML = ''\n  localStorage.removeItem('iamcode');\n  console.log('iamcode REMOVED!')\n  localStorage.removeItem('iamAttestation');\n  console.log('iamAttestation removed from localstorage !')\n  localStorage.removeItem('iamcodeUID');\n  console.log('iamcodeUID removed from localstorage !')\n  console.log('iamAttestation REVOKED!')\n  Toast.fire({ icon: 'error', title: 'iam code and attetation deleted!' })\n// DELETE STEP 2\ndocument.getElementById('stepAttest1Spinner').style.display= 'none'\ndocument.getElementById('stepAttest1Check').style.visibility= 'visible'\ndocument.getElementById(\"cancelAttesting\").disabled = false;\ndocument.getElementById(\"cancelAttesting\").innerText = 'close'\n\n  // FIN DO SOMETHING HERE... -------------------------------------------------------------\n\n    } catch (error) {\n      console.log('ERROR AT LOCALWALLET PROCESSING:', error);\n      document.getElementById('stepAttest1Spinner').style.display= 'none'\n      document.getElementById('stepAttest1Check').style.display= 'none'\n      document.getElementById('stepAttest1Error').style.visibility= 'visible'\n      document.getElementById(\"cancelAttesting\").disabled = false;\n\n\n// document.getElementById('stepAttest1Check').innerHTML= `<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"1em\" viewBox=\"0 0 576 512\"><style>svg{fill:#fa0000}</style><path d=\"M569.517 440.013C587.975 472.007 564.806 512 527.94 512H48.054c-36.937 0-59.999-40.055-41.577-71.987L246.423 23.985c18.467-32.009 64.72-31.951 83.154 0l239.94 416.028zM288 354c-25.405 0-46 20.595-46 46s20.595 46 46 46 46-20.595 46-46-20.595-46-46-46zm-43.673-165.346l7.418 136c.347 6.364 5.609 11.346 11.982 11.346h48.546c6.373 0 11.635-4.982 11.982-11.346l7.418-136c.375-6.874-5.098-12.654-11.982-12.654h-63.383c-6.884 0-12.356 5.78-11.981 12.654z\"/></svg>`\n\n\n\n\n    }\n  })\n  .catch((error) => {\n    console.log('ERROR AT LOCALWALLET DECRYPTING:', error);\n        Toast.fire({ icon: 'error', title: error })\n\n  });\n\n \n\n                          }\n\n                          else if (result.isDenied) {\n                            console.log('NOT DECRYPTED')\n                            return\n                          }\n\n                        })\n                      }\n                    }\n\n\n  }\n\n\n\n  // https://sepolia.easscan.org/schema/view/0x5e9a817ef4acf13c8e2dba0944586660292e02e169a2da473530e6709c502338\nasync function attestDocument(cid) {\n  console.log('ATTEST for document  controlled by IAM address');\n\nconst EASContractAddress = \"0xC2679fBD37d54388Ce493F1DB75320D236e1815e\"; // Sepolia Testnet v0.26\nconst provider = new ethers.providers.JsonRpcProvider(\"https://endpoints.omniatech.io/v1/eth/sepolia/public\");\nconst privateKey = \"0xeddb270797ba825b0e911b0fd9d203e50d753f61691d1172c9fd9bd9c10f520d\";\nconst signer = new ethers.Wallet(privateKey, provider);\n\nconsole.log('signer:', signer)\n      let eas= new EAS(EASContractAddress);\n      console.log('provider: ', provider);\n      eas.connect(provider);\n\nconsole.log('offchainIAM')\nconst inputString = \"IAM-chm-04181980\";\nconst bytes32Value = stringToBytes32(inputString);\nconsole.log(bytes32Value);\nconst offchain = await eas.getOffchain();\n\nconst timestamp = Math.floor(new Date().getTime() / 1000);\nconsole.log(timestamp);\n\n\nconst schemaEncoder = new SchemaEncoder(\"bytes32 IAMcode,string IAMdocument\");\nconst encodedData = schemaEncoder.encodeData([\n  { name: \"IAMcode\", value: bytes32Value, type: \"bytes32\" },\n  { name: \"IAMdocument\", value: signer.address, type: \"string\" },\n]);\n\nconst offchainAttestation = await offchain.signOffchainAttestation({\nrecipient: signer.address,\nexpirationTime: 0,\ntime: timestamp,\nrevocable: true,\nversion: 1,\nnonce: 0,\nschema: \"0x5e9a817ef4acf13c8e2dba0944586660292e02e169a2da473530e6709c502338\",\nrefUID: '0x0000000000000000000000000000000000000000000000000000000000000000',\ndata: encodedData,\n}, signer);\n\nconsole.log('offchainAttestation:' ,offchainAttestation)\nlet offchainobject  = {sig: offchainAttestation, signer: signer.address}\nconst url = createOffchainURL(offchainobject);\nconsole.log('URL:','https://sepolia.easscan.org'+url )\n    \n}\n\n\nasync function attestAtesttation(uid){\n  console.log('attestAtesttation: ', uid)\n\n// }\n\n// function viewItem(cid) {\n  // let ipfsGateway = 'https://w3s.link/ipfs/';\n    // let ipfslink = ipfsGateway+cid;\n  let attLink = `${uid}`;\n    console.log('attLink:',attLink);\n    window.open(attLink, '_blank', 'fullscreen=yes');\n  return false;\n  }"],"names":[],"version":3,"file":"index.4c8bdd12.js.map","sourceRoot":"/__parcel_source_root/"}