{"mappings":"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","sources":["src/js/nft.js"],"sourcesContent":["async function mint(){\n  console.log('fake mint!')\n  Swal.fire(\n    'stay in touch..',\n    'this feature is not available yet',\n    'question'\n  )\n\n}\n\nasync function mint2(){\n        // ---------------------------------------------\n        //  CHECK WALLET CHOICE (CONNECTED-DISCONNECTED)\n      let walletChoice = localStorage.getItem('wallet');\n      if (walletChoice) {\n          console.log('THERE IS WALLET  CHOICE SAVED IN LOCALSTORAGE')\n          if(walletChoice == \"METAMASK\"){\n              console.log('USE METAMASK ')              \n          }\n                if(walletChoice ==\"LOCALWALLET\"){\n                    console.log('USE LOCALWALLET:')\n\n                        //   -------------------------------------------------------------\n                      //STEP 0 -  DECRYPT WALLET TO MAKE THE TRANSACTION\n                      await Swal.fire({ title: 'Unlock your LOCALWALLET', input: 'password', inputAttributes: { autocapitalize: 'off' }, showCancelButton: true, confirmButtonText: 'Enter', showLoaderOnConfirm: true, backdrop: true, preConfirm: (login) => { }, allowOutsideClick: () => { const popup = Swal.getPopup(); popup.classList.remove('swal2-show'); setTimeout(() => { popup.classList.add('animate__animated', 'animate__headShake') }); setTimeout(() => { popup.classList.remove('animate__animated', 'animate__headShake') }, 500); return false }, })\n                      .then((result) => {\n                      if (result.isConfirmed) {\n                      console.log('password entered!')\n                        if(result.value ==''){ console.log('IS EMPTY'); Toast.fire({ icon: 'error', title: 'Password cannot be empty' }); return; }\n\n                        cancelMinting.disabled = true;//DISABLE CANCEL\n\n                        openModal('#mintingModal')\n                        document.getElementById('step0').innerHTML= `<h5>1- Decrypt wallet  <span id=\"step0Spinner\" style=\"\" class=\"spinner-grow spinner-grow-sm\"></span> <svg id=\"step0Check\"  style=\"visibility:hidden\" width=\"18\" height=\"16\" viewBox=\"0 0 512 512\"  xmlns:svg=\"http://www.w3.org/2000/svg\"> <path d=\"M243.8 339.8C232.9 350.7 215.1 350.7 204.2 339.8L140.2 275.8C129.3 264.9 129.3 247.1 140.2 236.2C151.1 225.3 168.9 225.3 179.8 236.2L224 280.4L332.2 172.2C343.1 161.3 360.9 161.3 371.8 172.2C382.7 183.1 382.7 200.9 371.8 211.8L243.8 339.8zM512 256C512 397.4 397.4 512 256 512C114.6 512 0 397.4 0 256C0 114.6 114.6 0 256 0C397.4 0 512 114.6 512 256zM256 48C141.1 48 48 141.1 48 256C48 370.9 141.1 464 256 464C370.9 464 464 370.9 464 256C464 141.1 370.9 48 256 48z\" style=\"fill:#00ff00\"/></svg> </h5>\n                        <div id=\"step0Progress\"></div>`;\n\n                        \n                        let encryptedjson = localStorage.getItem('jsonWallet')\n                        let ew = JSON.parse( encryptedjson)\n                        console.log('pub key of wallet in localstorage:', ew.address)\n                \n                \n                        let wallet;\n                        try { \n                          wallet =  ethers.Wallet.fromEncryptedJson(encryptedjson, result.value, decryptProgress)\n                          .then(async (localWallet) => {\n\n                          // STEP 0\n                              w=localWallet;\n                              console.log('WALLET DECRYPTED: ', localWallet.address)\n                              document.getElementById('step0Spinner').style.display= 'none'\n                              document.getElementById('step0Check').style.visibility= 'visible'\n                              document.getElementById('step0Progress').innerText= ''\n                            \n                          //   -------------------------------------------------------------\n                          // STEP 1= CHECK LOCALSTORAGE BEFORE UPLOADING TO IPFS\n                          let oldmetadata=  localStorage.getItem('metadata');\n\n                          // - UPLOAD TO IPFS\n                          document.getElementById('step1').innerHTML= `<h5>2- Uploading Metadata to IPFS  <span id=\"step1Spinner\" style=\"\" class=\"spinner-grow spinner-grow-sm\"></span> <svg id=\"step1Check\"  style=\"visibility:hidden\" width=\"18\" height=\"16\" viewBox=\"0 0 512 512\"  xmlns:svg=\"http://www.w3.org/2000/svg\"> <path d=\"M243.8 339.8C232.9 350.7 215.1 350.7 204.2 339.8L140.2 275.8C129.3 264.9 129.3 247.1 140.2 236.2C151.1 225.3 168.9 225.3 179.8 236.2L224 280.4L332.2 172.2C343.1 161.3 360.9 161.3 371.8 172.2C382.7 183.1 382.7 200.9 371.8 211.8L243.8 339.8zM512 256C512 397.4 397.4 512 256 512C114.6 512 0 397.4 0 256C0 114.6 114.6 0 256 0C397.4 0 512 114.6 512 256zM256 48C141.1 48 48 141.1 48 256C48 370.9 141.1 464 256 464C370.9 464 464 370.9 464 256C464 141.1 370.9 48 256 48z\" style=\"fill:#00ff00\"/></svg> </h5>`;\n    \n                          let metadataString;\n                          try { metadataString = await prepareMetadata();}\n                          catch (error) { console.log(error.message); document.getElementById('step1Spinner').style.display= 'none'; document.getElementById('step1Check').style.visibility= 'visible'; document.getElementById('step1Check').innerHTML= '<i class=\"fa-solid fa-circle-xmark\" style=\"color:red\"></i>'; let printCIDMessage = `<div class=\"alert alert-warning alert-dismissible fade show\" role=\"alert\">${error.message} </div>`; step1.innerHTML+= printCIDMessage; return }\n                          console.log('metadata:' ,metadataString);\n              \n                          // // UPLOAD TO IPFS  \n                          const jsonString = JSON.stringify(metadataString);\n                          const jsonBlob = new Blob([jsonString], { type: \"application/json\" });\n                          const jsonBlobFile = [ new File([jsonBlob], 'metadata.json',  { type: 'application/json' }) ];\n                          const client = makeStorageClient();\n                          try { CID =  await client.put(jsonBlobFile, { wrapWithDirectory:false })}\n                          catch (error) { console.log(error.message); return }\n                          \n                          // SAVE TO LOCALSTORAGE\n                          localStorage.setItem('metadata', CID);\n                          let ipfsLink = `${ipfsGateway}${CID}`\n                          console.log('stored file :', ipfsLink )\n      \n                            \n                        // SUCCESS ...CONTINUE\n                        document.getElementById('step1Spinner').style.display= 'none'\n                        document.getElementById('step1Check').style.visibility= 'visible'\n                        let printCIDMessage = `<div class=\"alert alert-success alert-dismissible fade show\" role=\"alert\"> CID:  <a href=\"${ipfsLink}\"  target=\"_blank\" style=\"word-break: break-all;\">${ipfsLink}</a> </div>`;\n                        step1.innerHTML+= printCIDMessage\n\n\n                              \n\n                        // ------------------------------------\n                      // STEP 2  - SELECT CHAIN\n                        // // - UPLOAD TO IPFS\n                        // step1.innerHTML= `<h5>2- Uploading Metadata to IPFS  <span id=\"step1Spinner\" style=\"\" class=\"spinner-grow spinner-grow-sm\"></span> <svg id=\"step1Check\"  style=\"visibility:hidden\" width=\"18\" height=\"16\" viewBox=\"0 0 512 512\"  xmlns:svg=\"http://www.w3.org/2000/svg\"> <path d=\"M243.8 339.8C232.9 350.7 215.1 350.7 204.2 339.8L140.2 275.8C129.3 264.9 129.3 247.1 140.2 236.2C151.1 225.3 168.9 225.3 179.8 236.2L224 280.4L332.2 172.2C343.1 161.3 360.9 161.3 371.8 172.2C382.7 183.1 382.7 200.9 371.8 211.8L243.8 339.8zM512 256C512 397.4 397.4 512 256 512C114.6 512 0 397.4 0 256C0 114.6 114.6 0 256 0C397.4 0 512 114.6 512 256zM256 48C141.1 48 48 141.1 48 256C48 370.9 141.1 464 256 464C370.9 464 464 370.9 464 256C464 141.1 370.9 48 256 48z\" style=\"fill:#00ff00\"/></svg> </h5>`;\n    \n                      step2.innerHTML = `<h5>3- Select network:<span id=\"step2Spinner\" style=\"\" class=\"spinner-grow spinner-grow-sm\"></span> <svg id=\"step2Check\"  style=\"visibility:hidden\" width=\"18\" height=\"16\" viewBox=\"0 0 512 512\"  xmlns:svg=\"http://www.w3.org/2000/svg\"> <path d=\"M243.8 339.8C232.9 350.7 215.1 350.7 204.2 339.8L140.2 275.8C129.3 264.9 129.3 247.1 140.2 236.2C151.1 225.3 168.9 225.3 179.8 236.2L224 280.4L332.2 172.2C343.1 161.3 360.9 161.3 371.8 172.2C382.7 183.1 382.7 200.9 371.8 211.8L243.8 339.8zM512 256C512 397.4 397.4 512 256 512C114.6 512 0 397.4 0 256C0 114.6 114.6 0 256 0C397.4 0 512 114.6 512 256zM256 48C141.1 48 48 141.1 48 256C48 370.9 141.1 464 256 464C370.9 464 464 370.9 464 256C464 141.1 370.9 48 256 48z\" style=\"fill:#00ff00\"/></svg> </h5>\n                     <div id=\"chainSelector\">\n                      <select id=\"tokenContractAddress\"> </select><br /> (<span id=\"tcaddr\">Contract Address</span>) <br>\n                      <span id=\"timer\"></span> \n                      </div>`\n\n                      addTCAddressesToUI();\n                     \n                      var remainingSeconds = 5;\n                      var timer = setInterval( function() {\n                        console.log(remainingSeconds + \" seconds remaining...\");\n                        document.getElementById('timer').innerHTML = `${remainingSeconds} seconds remaining...`\n                        remainingSeconds--;\n\n                        if (remainingSeconds < 0) {\n                          clearInterval(timer);\n                          selectedChain = tokenContractAddress.value;\n                        document.getElementById('step2Spinner').style.display= 'none'\n                        document.getElementById('step2Check').style.visibility= 'visible'\n                        \n                        let contractAddressLink = selectedChain.split(',')[4] +'address/' + selectedChain.split(',')[1];\n                        console.log('contractAddressLink: ', contractAddressLink)\n                        chainSelector.innerHTML+= `<code>${selectedChain.split(',')[3]} selected.  <a href=\"${contractAddressLink}\" target=\"_blank\" rel=\"noopener noreferrer\">view</a></code>`;\n                        console.log('SELECTED INDEX: ',tokenContractAddress.selectedIndex)\n                        document.getElementById(\"tokenContractAddress\").disabled = true;\n\n                           // // PREPARE TX LINK\n                          console.log(\"Timer done!\");\n                        }\n                      }, 1000);\n                   \n                      \n\n                   \n  // STEP 3\n  // Wait for 6 seconds before continuing execution\n  setTimeout(async () => {\n    console.log('Execution resumed after waiting...')\n\n                      \n                      step3.innerHTML= `<h5>4- MINTING: Make the Transaction!  <span id=\"step3Spinner\" style=\"\" class=\"spinner-grow spinner-grow-sm\"></span>   <svg id=\"step3Check\"  style=\"visibility:hidden\" width=\"18\" height=\"16\" viewBox=\"0 0 512 512\"  xmlns:svg=\"http://www.w3.org/2000/svg\"> <path d=\"M243.8 339.8C232.9 350.7 215.1 350.7 204.2 339.8L140.2 275.8C129.3 264.9 129.3 247.1 140.2 236.2C151.1 225.3 168.9 225.3 179.8 236.2L224 280.4L332.2 172.2C343.1 161.3 360.9 161.3 371.8 172.2C382.7 183.1 382.7 200.9 371.8 211.8L243.8 339.8zM512 256C512 397.4 397.4 512 256 512C114.6 512 0 397.4 0 256C0 114.6 114.6 0 256 0C397.4 0 512 114.6 512 256zM256 48C141.1 48 48 141.1 48 256C48 370.9 141.1 464 256 464C370.9 464 464 370.9 464 256C464 141.1 370.9 48 256 48z\"  style=\"fill:#00ff00\"/></svg> </h5>`;\n                          setTimeout(() => { step3.classList.add('visible') }, 400);\n    \n                 //   -------------------------------------------------------------\n                  // 0- CHECK OWNERSHIP (check if is no owner already)\n                  let chain  =   tokenContractAddress.options[tokenContractAddress.selectedIndex].value.split(',')[3];\n                  let uAddress =  userAddress;\n                  let tAddress = tokenContractAddress.options[tokenContractAddress.selectedIndex].value.split(',')[1];\n                  let tAbi = ABIs[tokenContractAddress.options[tokenContractAddress.selectedIndex].value.split(',')[2]];\n                  console.log('mintUPT:', chain, uAddress, tAddress)\n\n\n              // GET NETWORK\n                  let provider = await new ethers.providers.JsonRpcProvider(`${optionsList[0].API}`);\n                  console.log('PROVIDER:', provider);\n\n                    try{ network = await provider.getNetwork(); }\n                    catch (error) { console.log(error.message); fixedToast.fire( 'Error',error.message, \"error\"); \n                    mode.innerHTML = 'OFFCHAIN'; mode.style.border = '1px solid red'; mode.style.color = 'red'; }\n                    console.log('Chain ID:', network.chainId);\n  \n  \n                    //   -------------------------------------------------------------\n                    // CHECK IF OWNER OWNS AN NFT ALREADY\n                    contract = new ethers.Contract(tAddress, tAbi, provider)\n                    console.log('CONTRACT: ', contract)\n                    try { tokenIdbyAddr = await contract.TIds(uAddress) }\n                    catch (error) { console.log('error:', error); return; }\n                    console.log('tokenIdbyAddr', tokenIdbyAddr)\n                    let  tid = parseInt( tokenIdbyAddr, 16)\n                    console.log('tid', tid)\n                    \n                    console.log('OWNER?: tokenIdbyAddr: ',tokenIdbyAddr )\n                    // A- IF USER DOESNT OWN A TOKEN\n                    if(tid == 0) {\n                      console.log('YOU DONT HAVE A UNIVERSAL PASS ')\n                    } else {\n                      console.log('YOUR ARE OWNER OF UP TOKEN',tid )\n                      Toastnoclose.fire('', `YOUR ARE OWNER OF UP TOKEN ${tid}`, \"info\");\n                      return\n                    }\n\n\n                    //   -------------------------------------------------------------\n               // MAKE THE TRANSACTION\n                console.log('we start minting process',tAddress, tAbi, provider,ipfsLink)\n                //  mintUniversalPass(ipfsLink,localWallet)\n                const signer = localWallet.connect(provider)\n                const address = await signer.getAddress();\n                balance = await signer.getBalance();\n                console.log('address and balance:', address,  parseInt( balance, 16))\n\n                const contractWithSigner = contract.connect(signer);\n                const gasLimit = await contractWithSigner.estimateGas.mintUniversalPass(ipfsLink);\n                // console.log('gasLimit: ', parseInt( gasLimit.hex, 16))\n                console.log('gasLimit:', parseInt( gasLimit, 16))\n\n\n\n            //   NEXT STEP\n              step3Check.style.visibility= 'visible';\n              step3Check.innerHTML= '<i class=\"fa-regular fa-circle-check\"  style=\"color:#00ff00\"></i>';\n              document.getElementById('step3Spinner').style.display= 'none'\n\n            //TRANSACION PASSED: WAITING FOR CONFIRMATIONS\n              step4.innerHTML+= `<h5>Waiting for confirmations!  <span id=\"step2SpinnerConfirmation\" style=\"\" class=\"spinner-grow spinner-grow-sm\"></span>   <svg id=\"step2CheckConfirmation\"  style=\"visibility:hidden\" width=\"18\" height=\"16\" viewBox=\"0 0 512 512\"  xmlns:svg=\"http://www.w3.org/2000/svg\"> <path d=\"M243.8 339.8C232.9 350.7 215.1 350.7 204.2 339.8L140.2 275.8C129.3 264.9 129.3 247.1 140.2 236.2C151.1 225.3 168.9 225.3 179.8 236.2L224 280.4L332.2 172.2C343.1 161.3 360.9 161.3 371.8 172.2C382.7 183.1 382.7 200.9 371.8 211.8L243.8 339.8zM512 256C512 397.4 397.4 512 256 512C114.6 512 0 397.4 0 256C0 114.6 114.6 0 256 0C397.4 0 512 114.6 512 256zM256 48C141.1 48 48 141.1 48 256C48 370.9 141.1 464 256 464C370.9 464 464 370.9 464 256C464 141.1 370.9 48 256 48z\"  style=\"fill:#00ff00\"/></svg> </h5>`;\n\n\n\n\n              // const tx = await contractWithSigner.mintUniversalPass(ipfsLink, { gasLimit: gasLimit });\n              try { tx = await contractWithSigner.mintUniversalPass(ipfsLink, { gasLimit: gasLimit })}\n                catch (error) { \n                  console.log('error:', error); \n                    Toast.fire('Mint error!',error.message, \"error\"); \n                    step4.innerHTML= error.message;\n                  return; }\n\n              const receipt = await tx.wait();\n              console.log(`Transaction confirmed with ${receipt.gasUsed} gas`);\n              console.log(`receipt ${receipt} `);\n\n              // delete IPFSdistributions\n            localStorage.removeItem('IPFSdistributions')\n            localStorage.removeItem('lastIpfsDistroCID')\n\n\n              \n                step4.classList.add('visible')\n                let printMintSuccessMessage = `\n                <div class=\"container\">\n                <div class=\"row\">\n                <div class=\"col\">\n                <img src=\"undraw_winners_re_wr1l.svg\" alt=\"\" style=\"width: 100%;\">\n\n                </div>\n                <div class=\"col text-center d-flex align-items-center\">\n                GREAT! You minted your UP token .\n                <svg id=\"step3Check\"    width=\"18\" height=\"16\" viewBox=\"0 0 512 512\"  xmlns:svg=\"http://www.w3.org/2000/svg\"> <path d=\"M243.8 339.8C232.9 350.7 215.1 350.7 204.2 339.8L140.2 275.8C129.3 264.9 129.3 247.1 140.2 236.2C151.1 225.3 168.9 225.3 179.8 236.2L224 280.4L332.2 172.2C343.1 161.3 360.9 161.3 371.8 172.2C382.7 183.1 382.7 200.9 371.8 211.8L243.8 339.8zM512 256C512 397.4 397.4 512 256 512C114.6 512 0 397.4 0 256C0 114.6 114.6 0 256 0C397.4 0 512 114.6 512 256zM256 48C141.1 48 48 141.1 48 256C48 370.9 141.1 464 256 464C370.9 464 464 370.9 464 256C464 141.1 370.9 48 256 48z\"  style=\"fill:#00ff00\"/></svg>\n\n                </div>\n                </div>\n                </div>\n                `\n                step4.innerHTML= printMintSuccessMessage\n\n                //  ALLOW CLOSING MODAL\n                cancelMinting.classList.remove('btn-danger') \n                cancelMinting.classList.add('btn-secondary') \n                cancelMinting.innerHTML='close'\n                cancelMinting.disabled = false;//ENABLE CANCEL\n\n\n\n\n            }, 6000)\n\n        //   FIN\n            });\n\n// ---\n                      } catch (error) {\n                        console.log('ERROR AT LOCALWALLET DECRYPTING:', error);\n                         Toast.fire({ icon: 'error', title: 'Password incorrect' })\n                        return;\n                        }\n\n\n                    \n\n                      }\n                      else if (result.isDismissed\t) { console.log('password cancelled:'); return false }\n\n                      })\n\n         \n\n  \n  // FIN MINT CON LOCALWALLET\n                  }\n                } else {\n                    console.log('NO WALLET CHOICE available')\n                  return\n                }\n\n}\n\n\n\n    /*********************************************************************************************\n    .) PREPARE METADATA\n              // MODELO DE METADATA OPENSEA\n              // {\n              //   \"description\": \"Friendly OpenSea Creature that enjoys long swims in the ocean.\", \n              //   \"external_url\": \"https://openseacreatures.io/3\", \n              //   \"image\": \"https://storage.googleapis.com/opensea-prod.appspot.com/puffs/3.png\", \n              //   \"name\": \"Dave Starbelly\",\n              //   \"attributes\": [ ... ], \n              // }\n\n              // example;\n              // {\"name\":\"IAM-chm-04181980\",\n              \"description\":\"Iuris Naturalis NFT\",\n              \"external_url\":\"https://w3s.link/ipfs/bafkreigfyowhdf6wf4ww2owys4behu53nj3cwzr2w5iih67pwk2byg6epi\",\"attributes\":\"\"}\n    **********************************************************************************************/\n              async function prepareMetadata(){\n\n                let name = localStorage.getItem('iamcode')\n                // let image= localStorage.getItem('image');\n                // let image= `iam_logo.jpg`;\n              // ---------\n              // description\n              let description = `Iuris Naturalis NFT`\n              let cid = localStorage.getItem('lastIpfsDistroCID')\n              let exturl = `${cid}`;\n              // let exturl = `${ipfsGateway}${cid}`;\n              let attr = '';\n              \n                const preURIMetadata = { \n                name: name, \n                description: description, \n                external_url: exturl, \n                // image: image, \n                attributes: attr }; \n                  \n                  return preURIMetadata\n              }\n              \n\n                 \n\n   \n  function addTCAddressesToUI (){\n  \n    const sel = document.getElementById(\"tokenContractAddress\");\n      for (var i = 0; i < optionsList.length; i++){\n        var obj = optionsList[i];\n        let tn = optionsList[i].TOKEN_NAME;\n        let ta = optionsList[i].TOKEN_ADDRESS;\n        let tb = optionsList[i].TOKEN_ABI;\n        let tch = optionsList[i].TOKEN_CHAINID;\n        let exp = optionsList[i].EXPLORER;\n        \n    \n        const opt = document.createElement(\"option\");\n        opt.value = `${tch},${ta},${tb},${tn},${exp}`;\n        opt.text = `${tn}`;\n        sel.add(opt, null);\n    \n      }\n    \n      tcaddr.innerHTML= tokenContractAddress.options[0].value.split(',')[1];//display contract address on page load\n      \n      \n      tokenContractAddress.onchange = function(e) {\n        console.log('select changed!',this.value)\n        // console.log('select !',this.option)\n        tcaddr.innerHTML= this.value.split(',')[1];\n      }\n    }\n\n\n    \n        /*********************************************************************************************\n    .) BURN NFT\n    **********************************************************************************************/\n    async function burnNFT(tid){\n      console.log('you are going to burn your universal pass token')\n\n      // GET PARAMS\n      let UPJSON = JSON.parse(localStorage.getItem('Up_JSON'))\n\n      if(!UPJSON){\n        // console.log('there is no UPJSON')\n\n             let prefIndex = 0;\n            let tAddr = optionsList[prefIndex].TOKEN_ADDRESS;\n            let tAbi =ABIs[optionsList[prefIndex].TOKEN_ABI]\n            let tChain =ABIs[optionsList[prefIndex].TOKEN_CHAINID]\n            console.log('there is no UPJSON: ',tid,tAddr, tChain,tAbi)\n\n      } else {\n        console.log('there is UPJSON:' , UPJSON)\n\n        // let tid = UPJSON.tId\n        let  tid = parseInt( UPJSON.tId.hex, 16)\n        let tAddr = UPJSON.tAddr\n        let tChain = UPJSON.tChain\n\n        console.log('UP_JSON INFO: ',tid,tAddr, tChain)\n\n        // USAGE: filterValuePart(optionsList, \"0xafA14234a25c1f051cB620c561462Da78D52e4B9\");\n            let tAbiSearch =filterValuePart(optionsList, tAddr);\n            let tAbi = tAbiSearch[0].TOKEN_ABI\n            console.log('TOKEN ABI FROM SEARCH: ', tAbi)\n            console.log('tChain: ',tChain)\n            console.log('tAbi: ',tAbi)\n            console.log('tAddr: ',tAddr)\n      }\n      \n    // ASK USER TO BURN TOKEN\n  await Swal.fire({\n  title: 'You will burn your Universal Pass token',\n  text: 'would you like to continue?',\n  icon: 'info',\n  showCancelButton: true,\n  confirmButtonText:'<i class=\"fa-solid fa-fire\"></i> Oui, Burn!',\n  confirmButtonAriaLabel: 'Changer!',\n  showLoaderOnConfirm: true,\n  footer: '<a target=\"_blank\" href=\"/docs/index.html#/?id=signatures\">What is a this?</a>',\n  allowOutsideClick: () => {\n  const popup = Swal.getPopup()\n  popup.classList.remove('swal2-show')\n  setTimeout(() => { popup.classList.add('animate__animated', 'animate__headShake') })\n  setTimeout(() => { popup.classList.remove('animate__animated', 'animate__headShake') }, 500)\n  }\n  })\n  .then( async (result) => {\n  if (result.isConfirmed) {\n\n              // ---\nawait Swal.fire({ title: 'Unlock your LOCALWALLET', input: 'password', inputAttributes: { autocapitalize: 'off' }, showCancelButton: true, confirmButtonText: 'Enter', showLoaderOnConfirm: true, backdrop: true, preConfirm: (login) => { }, allowOutsideClick: () => { const popup = Swal.getPopup(); popup.classList.remove('swal2-show'); setTimeout(() => { popup.classList.add('animate__animated', 'animate__headShake') }); setTimeout(() => { popup.classList.remove('animate__animated', 'animate__headShake') }, 500); return false }, })\n.then((result) => {\nif (result.isConfirmed) {\nconsole.log('password entered!')\n  \nlet encryptedjson = localStorage.getItem('jsonWallet')\nlet ew = JSON.parse( encryptedjson)\nconsole.log('pub key of wallet in localstorage:', ew.address)\n\nopenModalId('#walletBurn')\nburnstep0.innerHTML= `<h5>1- Decrypt wallet  <span id=\"burnstep0Spinner\" style=\"\" class=\"spinner-grow spinner-grow-sm\"></span> <svg id=\"burnstep0Check\"  style=\"visibility:hidden\" width=\"18\" height=\"16\" viewBox=\"0 0 512 512\"  xmlns:svg=\"http://www.w3.org/2000/svg\"> <path d=\"M243.8 339.8C232.9 350.7 215.1 350.7 204.2 339.8L140.2 275.8C129.3 264.9 129.3 247.1 140.2 236.2C151.1 225.3 168.9 225.3 179.8 236.2L224 280.4L332.2 172.2C343.1 161.3 360.9 161.3 371.8 172.2C382.7 183.1 382.7 200.9 371.8 211.8L243.8 339.8zM512 256C512 397.4 397.4 512 256 512C114.6 512 0 397.4 0 256C0 114.6 114.6 0 256 0C397.4 0 512 114.6 512 256zM256 48C141.1 48 48 141.1 48 256C48 370.9 141.1 464 256 464C370.9 464 464 370.9 464 256C464 141.1 370.9 48 256 48z\" style=\"fill:#00ff00\"/></svg> </h5>\n<div id=\"burnstep0Progress\"></div>`;\n\nlet wallet;\ntry { \nwallet =  ethers.Wallet.fromEncryptedJson(encryptedjson, result.value, burndecryptProgress)\n.then(async (localWallet) => {\n\n  // STEP 0\n  // w=localWallet;\n  console.log('WALLET DECRYPTED: ', localWallet.address)\n\n  // console.log('WALLET DECRYPTED: ', wallet.address)\n  document.getElementById('burnstep0Spinner').style.display= 'none'\n  document.getElementById('burnstep0Check').style.visibility= 'visible'\n  document.getElementById('burnstep0Progress').innerText= ''\n\n// STEP 2 . get aproximated gas for the tx\n  burnstep1.innerHTML= `<h5>2- Aproximated gas for transaction:   <span id=\"burnstep1Spinner\" style=\"\" class=\"spinner-grow spinner-grow-sm\"></span> <svg id=\"burnstep1Check\"  style=\"visibility:hidden\" width=\"18\" height=\"16\" viewBox=\"0 0 512 512\"  xmlns:svg=\"http://www.w3.org/2000/svg\"> <path d=\"M243.8 339.8C232.9 350.7 215.1 350.7 204.2 339.8L140.2 275.8C129.3 264.9 129.3 247.1 140.2 236.2C151.1 225.3 168.9 225.3 179.8 236.2L224 280.4L332.2 172.2C343.1 161.3 360.9 161.3 371.8 172.2C382.7 183.1 382.7 200.9 371.8 211.8L243.8 339.8zM512 256C512 397.4 397.4 512 256 512C114.6 512 0 397.4 0 256C0 114.6 114.6 0 256 0C397.4 0 512 114.6 512 256zM256 48C141.1 48 48 141.1 48 256C48 370.9 141.1 464 256 464C370.9 464 464 370.9 464 256C464 141.1 370.9 48 256 48z\" style=\"fill:#00ff00\"/></svg> </h5>\n  <div id=\"burnstep1Progress\"></div>`;\n    // cancel button\n    cancelburnbutton.disabled = true;\n    cancelburnbutton.classList.add('cancel-burn');\n \n    let provider;\n    try{ provider = await new ethers.providers.JsonRpcProvider(`${optionsList[0].API}`); }\n    catch (error) { console.log('error:', error); return; }\n\n    \n\n  let prefIndex = 0;\n  let tAddr = optionsList[prefIndex].TOKEN_ADDRESS;\n  let tAbi =ABIs[optionsList[prefIndex].TOKEN_ABI]\n  let tChain =ABIs[optionsList[prefIndex].TOKEN_CHAINID]\n  // let tId =  parseInt( tokenIdbyAddr, 16)\n\n  // let tId = tId.toString()\n  contract = new ethers.Contract(tAddr, tAbi, provider)\n  console.log('tAddr, tAbi, provider: ',tAddr, tAbi, provider)\n\n  try { tokenIdbyAddr = await contract.TIds(localWallet.address) }\n  catch (error) { console.log('error:', error); return; }\n  console.log('tokenIdbyAddr', tokenIdbyAddr)\n  // let  tId = parseInt( tokenIdbyAddr, 16)\n  const tId = tokenIdbyAddr.toString(10);\n\n  console.log('tId', tId)\n    \n     \n     const signer = localWallet.connect(provider)\n          console.log('signer:', signer)\n          const address = await signer.getAddress();\n          balance = await signer.getBalance();\n          console.log('address and balance:', address,  parseInt( balance, 16))\n          const contractWithSigner = contract.connect(signer);\n          console.log( 'contractWithSigner: ',contractWithSigner)\n          cws = contractWithSigner;\n\n          console.log(`burnUniversalPass(\"${tId}\")`);\n          const gasLimit = await contractWithSigner.estimateGas.burnUniversalPass(tId);\n          console.log('gasLimit:', parseInt( gasLimit, 16));\n          // gas:\n          document.getElementById('burnstep1Progress').innerHTML = `${parseInt( gasLimit, 16)}`\n          document.getElementById('burnstep1Spinner').style.display= 'none'\n          document.getElementById('burnstep1Check').style.visibility= 'visible'\n          document.getElementById('burnstep1Progress').innerText= ''\n \n//  STEP 3 MAKING THE TX (AWAITING FOR CONFIRMATION)         \n\ndocument.getElementById('burnstep2').innerHTML= `<h5>3- Making the transaction...   <span id=\"burnstep2Spinner\" style=\"\" class=\"spinner-grow spinner-grow-sm\"></span> <svg id=\"burnstep2Check\"  style=\"visibility:hidden\" width=\"18\" height=\"16\" viewBox=\"0 0 512 512\"  xmlns:svg=\"http://www.w3.org/2000/svg\"> <path d=\"M243.8 339.8C232.9 350.7 215.1 350.7 204.2 339.8L140.2 275.8C129.3 264.9 129.3 247.1 140.2 236.2C151.1 225.3 168.9 225.3 179.8 236.2L224 280.4L332.2 172.2C343.1 161.3 360.9 161.3 371.8 172.2C382.7 183.1 382.7 200.9 371.8 211.8L243.8 339.8zM512 256C512 397.4 397.4 512 256 512C114.6 512 0 397.4 0 256C0 114.6 114.6 0 256 0C397.4 0 512 114.6 512 256zM256 48C141.1 48 48 141.1 48 256C48 370.9 141.1 464 256 464C370.9 464 464 370.9 464 256C464 141.1 370.9 48 256 48z\" style=\"fill:#00ff00\"/></svg> </h5> `\n\n\n          try { tx = await contractWithSigner.burnUniversalPass(tId, { gasLimit: gasLimit })}\n            catch (error) { console.log('error:', error); Toast.fire('Mint error!',error.message, \"error\"); return; }\n\n          const receipt = await tx.wait();\n          console.log(`Transaction confirmed with ${receipt.gasUsed} gas`);\n          \n          success_messagewalletBurn.style.display = 'block'\n          success_messagewalletBurn.innerHTML = `Transaction confirmed with ${receipt.gasUsed} gas`\n          \n          cancelburnbutton.disabled = false;\n\n\n\n    // RELOAD UI\n    console.log('RELOAD UI')\n    init()\n\n\n\n\n\n\n})\n}\ncatch (error) {\n  console.log('ERROR AT LOCALWALLET DECRYPTING:', error);\n   Toast.fire({ icon: 'error', title: 'Password incorrect' })\n  return;\n  }\n\n}})\n\n\n    // ------------------------------------\n\n  } else if (result.isDismissed) {\n    Toast.fire('', 'Burn canceled!', \"info\");\n    console.log('Burn canceled!');\n  return;\n  }\n  })\n\n}\n\n\n\n\n\n\n  // *********************************\n  // nftIpfsDistro()\n  // *********************************\n  async function nftIpfsDistro(ipfsjson,tid,universalPassData,uplink,img){\n\n    console.log(\"nftIpfsDistro\",ipfsjson,tid,universalPassData,uplink,img)\n    \n    let index = 0 ;\n    let ipfsDistros = ipfsjson;\n    if(!ipfsDistros){\n        console.log('THERE IS NO ipfsDistros')\n        return\n    }\n\n    // document.getElementById('mint').style.display ='none'\n     ipfsdist =  JSON.parse(signed);\n    let iamcode = ipfsdist.iamCode\n    const targetTimestamp = parseInt(universalPassData.dateCreated,16)*100; // Replace with your own target timestamp\n    console.log('targetTimestamp:',targetTimestamp)\n    \n\n    let docs = ipfsdist.iamDocuments;\n    console.log('DOCS LENGTH: ', docs.length)\n    console.log('DOCS : ', docs)\n    await localStorage.setItem('mintedDocuments', JSON.stringify(docs));\n\n    \n    // LINKIPFS\n    let linkIPFS = universalPassData.uri;// dejar el espacio para poder cambiar el link ipfs desde la UI en caso de update\n    \n    // ADD IMG\n    let photo =  ipfsdist.iamPhoto\n    // console.log('IMG: ', JSON.parse(photo))\n\n  // GET CONFIG \n  let preferedOption = localStorage.getItem('preferedOption');\n  if(!preferedOption){\n      console.log('THEREs NO CONFIG SETTED');\n  preferedOption = 0;\n\n  }\n  let tokenExplorer =  optionsList[preferedOption].EXPLORER;\n  let tokenContract =  optionsList[preferedOption].TOKEN_ADDRESS;\n\n  let contractLink =`${tokenExplorer}address/${tokenContract}`;\n  var shortTokenContract = tokenContract.substring(0, 6) + \"...\"+ tokenContract.substring(38, 42);\n\n//   let contractLink =`${tokenExplorer}/address/${tokenContract}`;\n  console.log('CONTRACT LINK:', contractLink)\n  document.getElementById('soveraindocs').setAttribute('style', 'display:inline!important');\n\n    soveraindocs.innerHTML = ` \n<div class=\"container\">\n  <div class=\"row\">\n    <div class=\"col-md-6 center\">\n      <div class=\"card flex-row mb-4\">\n        <div class=\"card-body\">\n        <div id=\"canvas\"></div>\n      \n        </div>\n      </div>\n    </div>\n\n    <div class=\"col-md-6\">\n      <div class=\"card flex-row mb-4\">\n        <div class=\"card-body\">\n          <h5 class=\"card-title\">ACTIONS</h5>\n          <p class=\"card-text\">NFT Id:<code> ${tid}</code></p>\n\n    <p class=\"card-text published\">Public Documents (<code>${docs.length}</code>):\n     <code>   <a href=\"${uplink}\" target=\"_blank\" rel=\"noopener noreferrer\" >IPFS link</a>\n    <i class=\"fas fa-trash iconbutton\" aria-hidden=\"true\" onclick=\"event.stopPropagation();deleteIpfsDistro((this.parentElement))\"></i> \n    </code></p>\n\n        <p class=\"card-text\">Contract:<code> \n          <a href=\"${contractLink}\" class=\"actionsLink\">${shortTokenContract}</a>\n        </code></p>\n\n\n        <p class=\"card-text published\">Metadata:\n        <code>   <a href=\"${universalPassData.uri}\" target=\"_blank\" rel=\"noopener noreferrer\" >${universalPassData.uri}</a>\n       </code></p>\n\n          <p class=\"card-text\">Validators: <code>-</code></p>\n\n          <div class=\"card flex-row mb-4\">\n          \n\n\n    <a href=\"#\" class=\"btn btn-primary\" onclick=\"event.stopPropagation();editIpfsDistro()\">+DOCUMENTS</a>\n\n          </div>\n          <br>\n\n\n\n\n  <div class=\"card flex-row mb-4\">\n  <a href=\"#\" class=\"btn btn-danger\" onclick=\"event.stopPropagation();receive()\" data-bs-toggle=\"tooltip\" title=\"Receive\"><i class=\"fas fa-satellite-dish\"></i> </a>\n  <a href=\"#\" class=\"btn btn-success\" onclick=\"event.stopPropagation();openWalletSend()\"  data-bs-toggle=\"tooltip\"  title=\"Send\"><i class=\"fas fa-paper-plane\"></i> </a>\n  <button id='amount'> \n    <div id=\"loader\" class=\"loader\">\n    <i class=\"fas fa-circle-notch fa-spin\"></i>\n  </div>\n  </button>\n\n\n  </div>\n  <br>\n\n\n\n  <div class=\"card flex-row mb-4\">\n\n\n  <a href=\"#\" style='display:none' class=\"btn btn-secondary\" onclick=\"event.stopPropagation();mintUPT()\">UPDATE</a>\n\n  </div>\n\n\n\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n\n\n\n<div id=\"content\" class=\"container\" style=\"display:none\">\n\n    <div id=\"head\"> \n          <div id=\"iamInfo\"> \n                <h1 id=\"iamCode\">${iamcode}</h1> \n                <h3 id=\"iamTokenId\"></h3> \n          </div>\n          <img id=\"iamImg\" src=\"logoIN6.png\" > \n    </div> \n    \n\n<div id=\"editMintedDocs\"></div>\n\n<div id=\"mintedDocs\">\n    \n    <table class=\"table\" id=\"myTable\" data-card-width=\"837\"> \n          <thead> <tr> <th data-card-title=\"\">Title</th> <th data-card-action-links=\"\">CID</th> <th data-card-footer=\"\">Actions</th> </tr> </thead> <tbody id=\"tbody\"> </tbody> \n    </table>\n    \n    </div> \n\n  </div> \n    \n    <ol id=\"footer\" class=\"list-group list-group-numbered container\" style=\"display:none\"> \n    <li class=\"list-group-item\">ADDRESS: <br>\n          <p id=\"iamAddress\" style=\"word-wrap:break-word\"></p>\n          <svg id=\"addrTrue\"  style=\"display:none\" width=\"18\" height=\"16\" viewBox=\"0 0 512 512\"  xmlns:svg=\"http://www.w3.org/2000/svg\">   <path d=\"M470.6 105.4c12.5 12.5 12.5 32.8 0 45.3l-256 256c-12.5 12.5-32.8 12.5-45.3 0l-128-128c-12.5-12.5-12.5-32.8 0-45.3s32.8-12.5 45.3 0L192 338.7 425.4 105.4c12.5-12.5 32.8-12.5 45.3 0z\" id=\"addressIsTrue\" style=\"fill:#00ff00\" /> </svg>\n          <svg id=\"addrFalse\"  style=\"display:none\"  width=\"18\" height=\"16\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 320 512\"><path d=\"M310.6 150.6c12.5-12.5 12.5-32.8 0-45.3s-32.8-12.5-45.3 0L160 210.7 54.6 105.4c-12.5-12.5-32.8-12.5-45.3 0s-12.5 32.8 0 45.3L114.7 256 9.4 361.4c-12.5 12.5-12.5 32.8 0 45.3s32.8 12.5 45.3 0L160 301.3 265.4 406.6c12.5 12.5 32.8 12.5 45.3 0s12.5-32.8 0-45.3L205.3 256 310.6 150.6z\" id=\"addressIsFalse\" style=\"fill:#ff0000\"/></svg>   \n    </li> \n    <li class=\"list-group-item\"> HASH:<p id=\"iamHash\" style=\"word-wrap:break-word\"> </p></li> <li class=\"list-group-item\">SIGNATURE <p id=\"iamSignature\" style=\"word-wrap:break-word\"></p></li> \n    </ol>\n    \n    <div class=\"card text-center\">\n    <div class=\"card-footer text-muted\">\n      Updated 2 days ago\n      <br>\n      Last checked: Today  07:52:42 resyncIcon\n    </div>\n  </div>\n`\n    \n\n//QR\nconst qrCode = new QRCodeStyling({ width: 300, height: 300, type: \"png\", data: uplink, image: `logoIN6.png`, \ndotsOptions: { color: \"#1568B0\", type: \"extra-rounded\" }, \nbackgroundOptions: { color: \"var(--qrbackground)\", }, \nimageOptions: { crossOrigin: \"anonymous\", margin: 0 } });\nqrCode.append(document.getElementById(\"canvas\"));\nconsole.log('qr code APPENDED')\n\n\n// ADD DOCS\n    docs.forEach((e => {\n        let t = e.title,\n            n = e.cid,\n            i = e.courtesy_translations;\n        var s = [];\n        i.forEach(((e, t) => {\n            let n = e.lang,\n                i = `<button type=\"button\" class=\"btn btn-outline-info px-3 waves-effect\" onclick=\"event.stopPropagation(); viewItem('${e.cid}')\"> \\n                    <span>${n} </span><svg width=\"18\" height=\"16\" class=\"svg-inline--fa fa-language\" aria-hidden=\"true\" data-prefix=\"fas\" data-icon=\"language\" role=\"img\" viewBox=\"0 0 640 512\"> <path fill=\"currentColor\" d=\"M0 128c0-35.3 28.7-64 64-64h512c35.3 0 64 28.7 64 64v256c0 35.3-28.7 64-64 64H64c-35.3 0-64-28.7-64-64V128zm320 0v256h256V128H320zm-141.7 47.9c-3.2-7.2-10.4-11.9-18.3-11.9s-15.1 4.7-18.3 11.9l-64 144c-4.5 10.1.1 21.9 10.2 26.4s21.9-.1 26.4-10.2l8.9-20.1h73.6l8.9 20.1c4.5 10.1 16.3 14.6 26.4 10.2s14.6-16.3 10.2-26.4l-64-144zM160 233.2l19 42.8h-38l19-42.8zM448 164c11 0 20 9 20 20v4h60c11 0 20 9 20 20s-9 20-20 20h-2l-1.6 4.5c-8.9 24.4-22.4 46.6-39.6 65.4.9.6 1.8 1.1 2.7 1.6l18.9 11.3c9.5 5.7 12.5 18 6.9 27.4s-18 12.5-27.4 6.9L467 333.8c-4.5-2.7-8.8-5.5-13.1-8.5-10.6 7.5-21.9 14-34 19.4l-3.6 1.6c-10.1 4.5-21.9-.1-26.4-10.2s.1-21.9 10.2-26.4l3.6-1.6c6.4-2.9 12.6-6.1 18.5-9.8L410 286.1c-7.8-7.8-7.8-20.5 0-28.3s20.5-7.8 28.3 0l14.6 14.6.5.5c12.4-13.1 22.5-28.3 29.8-45H376c-11 0-20-9-20-20s9-20 20-20h52v-4c0-11 9-20 20-20z\" /> </svg> \\n                </button> `;\n            s.push(i)\n        }));\n        let o = ` <tr> <td>${t} </td> <td> <p class='card-link' onclick=\"event.stopPropagation();copyItem('${n}')\"> ${n}</p> </td> <td> <button type=\"button\" class=\"btn btn-outline-info px-3 waves-effect\" onclick=\"event.stopPropagation();viewItem('${n}')\"> <svg width=\"18\" height=\"16\" class=\"svg-inline--fa fa-eye\" aria-hidden=\"true\" data-prefix=\"fas\" data-icon=\"eye\" role=\"img\" viewBox=\"0 0 576 512\"> <path fill=\"currentColor\" d=\"M288 32c-80.8 0-145.5 36.8-192.6 80.6C48.6 156 17.3 208 2.5 243.7c-3.3 7.9-3.3 16.7 0 24.6C17.3 304 48.6 356 95.4 399.4 142.5 443.2 207.2 480 288 480s145.5-36.8 192.6-80.6c46.8-43.5 78.1-95.4 93-131.1 3.3-7.9 3.3-16.7 0-24.6-14.9-35.7-46.2-87.7-93-131.1C433.5 68.8 368.8 32 288 32zm144 224c0 79.5-64.5 144-144 144s-144-64.5-144-144 64.5-144 144-144 144 64.5 144 144zm-144-64c0 35.3-28.7 64-64 64-11.5 0-22.3-3-31.6-8.4-.2 2.8-.4 5.5-.4 8.4 0 53 43 96 96 96s96-43 96-96-43-96-96-96c-2.8 0-5.6.1-8.4.4 5.3 9.3 8.4 20.1 8.4 31.6z\" /> </svg> </button> ${s.join(\"\")} </td> </tr>`;\n        tbody.innerHTML += o\n\n        console.log('docs.forEach EXECUTED')\n    }));\n    \n    \n    content.style.display= 'block'\n\n// SHOW ADDRESS BALANCE\n getAddressBalance(userAddress)\n  .then(balance => {\n        console.log(`Balance of ${userAddress}: ${balance} ETH`);  \n        document.getElementById('amount').innerHTML= ` ${balance} ETH`\n  })\n  .catch(error => {\n    console.error('Error:', error);\n  });\n\n\n    // HIDE LOADER loader\n    // customLoader.style.display = \"none\"\n    document.getElementById('loader').style.display='none'\n    console.log('LOADER DELETED!')\n            // document.getElementById('splash').style.display='none'\n            document.getElementById('splash').setAttribute('style', 'display:none');\n    \n\n\n\n  // TOOLTIPS\n    var tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle=\"tooltip\"]'))\n    var tooltipList = tooltipTriggerList.map(function (tooltipTriggerEl) {\n      return new bootstrap.Tooltip(tooltipTriggerEl)\n    })\n\n  }\n\n\n\n\n  // *********************************\n  // makeOnchain()\n  // *********************************\n  async function makeOnchain(){\n    console.log('Making onchain attestation')\n    \n  }\n\n    // *********************************\n  // makeIAMOnchain()\n  // *********************************\n  async function makeIAMOnchain(){\n    console.log('Making IAM code onchain attestation')\n    \n  }"],"names":[],"version":3,"file":"index.0aefd59b.js.map","sourceRoot":"/__parcel_source_root/"}